-------------------------------------------------------------- aws s3 setup ----------------------------------------

# create s3 and allow public access
# go to permission and add bucket policy

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
                "AWS": "*"
            },
            "Action": "s3:*",
            "Resource": [
                "arn:aws:s3:::bucket_name",
                "arn:aws:s3:::bucket_name/*"
            ]
        }
    ]
}


# go down on same permission page and edit the cors policy
[
    {
        "AllowedHeaders": [
            "*"
        ],
        "AllowedMethods": [
            "GET",
            "HEAD"
        ],
        "AllowedOrigins": [
            "*"
        ],
        "ExposeHeaders": []
    }
]

# now create a IAM user to access the bucket

$ search IAM > users > create user > enter name > Set permissions > Attach policies directly
$ search   "s3 full access" and check and submit
$ user list > security credential > create access key
$ use access key in project



pip install boto3
pip install django-storages


# INSTALLED_APPS

'storages',


# create storage_backends.py in same folder where settings.py is located

from storages.backends.s3boto3 import S3Boto3Storage

class MediaStorage(S3Boto3Storage):
    location = 'media'
    file_overwrite = False
    
    

# settings.py ------------------------------------------------------------------

STATIC_URL = '/static/'

PRODUCTION =False

if PRODUCTION == False:
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'staticfiles')
    ]

else:

    AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY")
    AWS_STORAGE_BUCKET_NAME = os.environ.get("AWS_STORAGE_BUCKET_NAME")
    AWS_S3_REGION_NAME = "ap-south-1"
    AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }

    AWS_LOCATION = 'static'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    STATIC_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
    AWS_QUERYSTRING_AUTH=False
    AWS_S3_FILE_OVERWRITE = True
    DEFAULT_FILE_STORAGE = 'helo.storage_backends.MediaStorage' 
    #end  settings.py ------------------------------------------------------------------
    
    
**************************************************** important **********************************************
when we are using s3, we can not delete a file from s3 bucket using os.remove(obj.file.path)

so now the code is :
    data = Document.objects.get(id=eid)
    # image delete from systems
    # ====================================
    if data.image:
        if len(data.image) > 0:
            data.image.delete(save=False)   #<----------------

    # =============================================
    data.delete()
    return redirect("/home/emp_document_add/{}".format(id))
